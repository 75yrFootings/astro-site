---
const {rating} = Astro.props

function starRating(stars:any, total:number) {
  const slots = Math.floor(stars)
  const ratingArray = new Array(slots).fill(true)
  const starArray = []
  let i = 0
  for (i; i < total; i++) {
    if (ratingArray[i] == true) {
      starArray.push({star: true})
    } else {
      starArray.push({star: false})
    }
  }
  return starArray
}
const stars = starRating(rating, 5)
---
<div class="flex items-center justify-center">
  {
    stars.map((star:any) => {
      if (star.star == true) {
        return <svg class="w-4 h-4 text-yellow-300 me-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"/>
              </svg>
      } else {
        return <svg class="w-4 h-4 text-gray-300 me-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"/>
              </svg>
      }
    })
  }
  <p class="ms-1 text-sm font-medium text-gray-400">{rating} out of 5</p>
</div>
